0x0B 재귀

0x09 BFS (breadth first search)
	-queue 활용

	팁
	   - 시작점에 방문 표시 남기기
	   - 큐에 넣은때 방문 표시 하기, 빼낼떄 방문 표시하면 비효율
	   - 이웃한 원소 범위 체크

0x08 스택의 활용

0x07 덱

0x06 큐


0x05 스택


0x04 연결 리스트     
     
0x03 배열

0x02
  함수 인자
     - 데이터 타입 : 값 복사
     - 배열       : 주소 값 복사
     - 구조체     : 값 복사
     - STL        : 값 복사

     참조자(&)를 사용하면 포인터 대신 간단히 코딩 가능

     벡터를 함수의 인자로 받을때 시간복잡도는 O(N)임.
     값들이 모두 복사가 일어나기 때문..
     참조자로 사용하면 O(1)이 됨

     cin cout 사용시 printf scanf 사용 금지
     ios_base::sync_with_stdio(false);
     cin.tie(0);
     필수

     endl은 절대 사용 하지 말것. 버퍼를 비우는 기능까지 있어 코테에 불필요.

     공백 문자열을 받을떄는 getline(cin,str) 사용


     백준에 있는 그룹문제 풀기
     30분 동안 못풀겠으면 해답 ㄱㄱ

0x01
  시간복잡도, 공간복잡도 중요성




최소 방의 갯수 구할 때
ex 총인원 5명, 방 수용 가능 2 --> answer = 5 / 2 + (5 % 2 != 0)

벡터의 특정 값의 개수 구할 때
count(v.begin(), v.end(), 1);

벡터의 작은 요소 값 지울 때
 arr.erase(min_element(arr.begin(), arr.end()));

 벡터의 가장 큰값
 max_element(arr.begin(),arr.end());

 2차원 배열의 영역 구하기
  bfs queue 이용

  순열 구하기 직접 dfs 구현 안해도 됨.
  단 사용시 sort로 정렬을 해줘야함.
  vector<int> v = { 1,2,3,4,5,6,7,8 };
	do {
		for (int a : v)
			cout << a;
		cout << '\n';
	} while (next_permutation(v.begin(), v.end()));




array(배열) vector(배열) list(양방향 리스트) foward_list(단방향 리스트) deque(양방향 큐)